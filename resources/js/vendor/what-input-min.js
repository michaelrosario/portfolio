/**
 * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).
 * @version v4.2.0
 * @link https://github.com/ten1seven/what-input
 * @license MIT
 */
!function e(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("whatInput",[],n):"object"==typeof exports?exports.whatInput=n():t.whatInput=n()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t){"use strict";e.exports=function(){var e="initial",t=null,n=document.documentElement,o=["input","select","textarea"],i=[],r=[16,17,18,91,93],u=[9],d={keydown:"keyboard",mousedown:"mouse",mousemove:"mouse",MSPointerDown:"pointer",MSPointerMove:"pointer",pointerdown:"pointer",pointermove:"pointer",touchstart:"touch"},s=[],a=!1,c=!1,p={x:null,y:null},f={2:"touch",3:"touch",4:"mouse"},v=!1;try{var m=Object.defineProperty({},"passive",{get:function e(){v=!0}});window.addEventListener("test",null,m)}catch(e){}var w=function e(){d[M()]="mouse",l(),y()},l=function e(){window.PointerEvent?(n.addEventListener("pointerdown",h),n.addEventListener("pointermove",x)):window.MSPointerEvent?(n.addEventListener("MSPointerDown",h),n.addEventListener("MSPointerMove",x)):(n.addEventListener("mousedown",h),n.addEventListener("mousemove",x),"ontouchstart"in window&&(n.addEventListener("touchstart",E),n.addEventListener("touchend",E))),n.addEventListener(M(),x,!!v&&{passive:!0}),n.addEventListener("keydown",h)},h=function n(i){if(!a){var s=i.which,c=d[i.type];if("pointer"===c&&(c=b(i)),e!==c||t!==c){var p=document.activeElement,f=!1;(p&&p.nodeName&&-1===o.indexOf(p.nodeName.toLowerCase())||-1!==u.indexOf(s))&&(f=!0),("touch"===c||"mouse"===c||"keyboard"===c&&s&&f&&-1===r.indexOf(s))&&(e=t=c,y())}}},y=function t(){n.setAttribute("data-whatinput",e),n.setAttribute("data-whatintent",e),-1===s.indexOf(e)&&(s.push(e),n.className+=" whatinput-types-"+e),L("input")},x=function e(o){if(p.x!==o.screenX||p.y!==o.screenY?(c=!1,p.x=o.screenX,p.y=o.screenY):c=!0,!a&&!c){var i=d[o.type];"pointer"===i&&(i=b(o)),t!==i&&(t=i,n.setAttribute("data-whatintent",t),L("intent"))}},E=function e(t){"touchstart"===t.type?(a=!1,h(t)):a=!0},L=function e(n){for(var o=0,r=i.length;o<r;o++)i[o].type===n&&i[o].function.call(void 0,t)},b=function e(t){return"number"==typeof t.pointerType?f[t.pointerType]:"pen"===t.pointerType?"touch":t.pointerType},M=function e(){var t=void 0;return t="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll"};return"addEventListener"in window&&Array.prototype.indexOf&&w(),{ask:function n(o){return"loose"===o?t:e},types:function e(){return s},ignoreKeys:function e(t){r=t},onChange:function e(t,n){i.push({function:t,type:n})}}}()}])});